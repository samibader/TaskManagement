@model SBC.TimeCards.Service.Models.Users.CreateUserViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Create User</h6>
    </div>
    <div class="card-body">
        @if (TempData["MessageRegistration"] != null)
        {
            <p class="alert alert-success" id="successMessage">@TempData["MessageRegistration"]</p>
        }
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="row">
                <div class="col-lg-4">
                    @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label manadatory" })
                    @Html.TextBoxFor(model => model.Username, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-4">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label manadatory" })
                    @*@Html.TextBoxFor(model => model.Email, new { @class = "form-control", @onblur = "CheckEmailExists();" })*@
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-4">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label manadatory" })
                    @*@Html.TextBoxFor(model => model.Email, new { @class = "form-control", @onblur = "CheckEmailExists();" })*@
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="clearfix"></div>
                <div class="col-lg-4">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label manadatory" })
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control", @maxlength = 30, })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-4">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label manadatory" })
                    @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            
            </div>
            <div class="row">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label manadatory" })
                    @Html.DropDownListFor(model => model.RoleId,null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-lg-4">
                    <input type="submit" value="Create User" class="btn btn-primary" />
                    @Html.ActionLink("All Users", "Index", "Users", null, new { @class = "btn btn-info" })
                </div>
            </div>
        }
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}