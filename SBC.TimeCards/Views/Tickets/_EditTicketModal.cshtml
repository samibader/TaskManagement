@model SBC.TimeCards.Service.Models.Tickets.EditTicketViewModel
@{
    Layout = null;
}
<!-- The Modal -->
<div class="modal" id="edit-ticket-modal" data-tid="@Model.Id" data-pid="@(Model.ParentTicketId.HasValue ? Model.ParentTicketId.Value : 0)">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Edit Ticket</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <!-- Modal body -->
            <div class="modal-body">

                <div class="card shadow mb-4">
                    <div class="card-header py-3">
                        <h6 class="m-0 font-weight-bold text-primary">
                            Edit Ticket
                            <a href="#" onclick="markDone(@Model.Id)">Mark As Done</a>
                            @if (!Model.ParentTicketId.HasValue)
                            {
                                <a href="#" onclick="addSubTicket(@Model.Id)" style="float:right"><i class="fa fa-plus"></i></a>
                            }
                        </h6>
                    </div>
                    <div class="card-body fields">

                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2 " })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2 " })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.AssigneeId, htmlAttributes: new { @class = "control-label col-md-2 " })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.AssigneeId,null,  new { @class = "form-control" } )
                                    @Html.ValidationMessageFor(model => model.AssigneeId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-2 " })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                @if (!Model.ParentTicketId.HasValue)
                {
                    <div class="card shadow mb-4">
                        <div class="card-header py-3">
                            <h6 class="m-0 font-weight-bold text-primary">
                                Sub Tickets
                            </h6>
                        </div>
                        <div class="card-body">
                            @{ Html.RenderAction("KanabanByTicket", "Tickets", new { id = Model.Id });}
                        </div>
                    </div>
                                }

                <div class="card shadow mb-4">
                    <div class="card-header py-3">
                        <h6 class="m-0 font-weight-bold text-primary">
                            Comments
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-12">
                                <input type="text" name="comment" id="comment" value="" />
                            </div>
                        </div>
                        @{ Html.RenderAction("GetComments", "Tickets", new { id = Model.Id });}
                    </div>
                </div>
            </div>

            <!-- Modal footer -->
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>

        </div>
    </div>
</div>
