@model SBC.TimeCards.Service.Models.Tickets.EditTicketViewModel
@using SBC.TimeCards.Common;
@{
    Layout = null;
}
<!-- The Modal -->



<div id="edit-ticket" data-tid="@Model.Id" data-pid="@(Model.IsSubTask ? Model.ParentTicketInfo.Id : 0)">
    <div class="modal-content">

        <!-- Modal Header -->
        <div class="modal-header">
            <h4 class="modal-title">Ticket #@Model.Id</h4>
            &nbsp; &nbsp; &nbsp; &nbsp;

            <button type="button" id="mk-done" class="btn btn-outline-info" style="display:@(Model.StateId ==(int)TicketStates.Done?"none":"inline-block")" onclick="markDone(@Model.Id)">Mark As Complete</button>

            <button type="button" id="mk-active" class="btn btn-outline-info" style="display:@(Model.StateId !=(int)TicketStates.Done?"none":"inline-block")" onclick="markUnDone(@Model.Id)">Mark As In progress</button>


            <button type="button" class="btn btn-outline-danger" onclick="delTicket(@Model.Id)">Delete </button>
            <button type="button" class="btn btn-outline-danger" onclick="initTemplate(1)">server </button>
            <button type="button" class="btn btn-outline-danger" onclick="initTemplate(4)">network </button>
            <button type="button" class="close" data-dismiss="modal">&times;</button>
        </div>

        <!-- Modal body -->
        <div class="modal-body">
            <div class="row clearfix fields">
                @if (Model.IsSubTask)
                {
                    <div class="col-md-12">
                        <a href="javascript:void(0)" onclick="editTicket(@Model.ParentTicketInfo.Id)">@Model.ParentTicketInfo.Title ></a>
                    </div>
                }
                <div class="col-12">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        <div class="col-md-12">
                            Project : <span class="badge" style="background-color:@Model.ProjectInfo.Color ; color:white">@Model.ProjectInfo.Name</span>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2 " })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @style = "font-size:20px" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            @Html.LabelFor(model => model.AssigneeId, htmlAttributes: new { @class = "control-label col-md-4 " })
                            <div class="col-md-8">
                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="icon-user"></i></span>
                                    </div>
                                    @Html.DropDownListFor(model => model.AssigneeId, null, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.AssigneeId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-6">
                            @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-4 " })
                            <div class="col-md-8">
                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="icon-clock"></i></span>
                                    </div>
                                    @*<input type="text" class="form-control time24" placeholder="Ex: 23:59">*@
                                    @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2 " })
                        <div class="col-md-12">
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control summernote", @rows = "5" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <hr />
            <div class="row clearfix fields">
                <div class="col-12">
                    <div class="form-group">
                        <div class="col-md-12">
                            <a href="#" class="btn btn-primary" onclick="addSubTicket(@Model.Id)"><i class="fa fa-plus"></i>Add Template</a>
                        </div>
                    </div>
                </div>
                @{ Html.RenderAction("GetTemplates", "Templates", new { ticketId = Model.Id });}
            </div>
            @if (!Model.IsSubTask)
            {
                <hr />
                <div class="row clearfix fields">
                    <div class="col-12">
                        <div class="form-group">
                            <div class="col-md-12">
                                <a href="#" class="btn btn-primary" onclick="addSubTicket(@Model.Id)"><i class="fa fa-plus"></i> New Sub-Task</a>
                            </div>
                        </div>
                    </div>
                    @{ Html.RenderAction("TicketsListByTicket", "Tickets", new { id = Model.Id });}
                </div>
                        }
            <hr />
            <div class="card">
                @*<div class="header">
                        <h2>Comments</h2>
                    </div>*@
                <div class="body">
                    <form>
                        <div class="form-group">
                            <textarea rows="4" name="comment" id="comment" class="form-control no-resize" placeholder="Enter here for new comment..."></textarea>
                        </div>
                    </form>

                    @{ Html.RenderAction("GetComments", "Tickets", new { id = Model.Id });}

                </div>
            </div>
        </div>

        <!-- Modal footer -->
        <div class="modal-footer">
            <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
        </div>

    </div>
</div>
<script>
    $(document).ready(function () {
        $("#DueDate").datepicker({
            format: "dd/mm/yyyy"
        });
    })

</script>